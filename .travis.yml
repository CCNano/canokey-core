dist: bionic
sudo: required
language:
  - cpp
compiler:
  - gcc
addons:
  apt:
    update: true
    packages:
      - gcc
      - g++
      - cmake
      - psmisc
      - pcscd
      - pcsc-tools
      - yubico-piv-tool
      - gnupg2
      - opensc
      - libpcsclite-dev
      - libcmocka-dev

script:
  - gpg2 --version
  - git clone --depth 1 https://github.com/google/u2f-ref-code.git
  - pushd u2f-ref-code/u2f-tests/HID
  - git clone --depth 1 -b lollipop-release https://android.googlesource.com/platform/system/core
  - cd ../NFC
  - git apply ../../../virt-card/disable-short-apdu-test.patch
  - make
  - popd
  -
  - mkdir build && pushd build
  - cmake .. -DENABLE_TESTS=ON -DCMAKE_BUILD_TYPE=Release
  - make -j2
  - ./canokey-crypto/test/test_aes
  - ./canokey-crypto/test/test_ecdsa
  - ./canokey-crypto/test/test_sha
  - ./test/test_u2f
  - ./test/test_piv
  - ./test/test_openpgp
  - popd
  -
  - sudo killall -9 pcscd || true
  - sudo cp build/libu2f-virt-card.so /usr/local/lib/
  - sudo cp pcscd-reader.conf /etc/reader.conf.d/
  - travis_wait 10 sudo pcscd -a -f >/tmp/pcscd.log &
  - sleep 3
  - timeout 1s pcsc_scan || true
  - # U2F tests:
  - echo 0 | ./u2f-ref-code/u2f-tests/NFC/u2f_nfc_test -v | tee /tmp/u2f_nfc_test.log
  - test $(grep -c 'PASS(signCheckSignature(regReq, regRsp, authReq, authRsp, rapduLen))' /tmp/u2f_nfc_test.log) -eq 3
  - # OpenPGP tests:
  - echo 12345678 >/tmp/passwd
  - "echo -e 'Key-Type: 1\nKey-Length: 2048\nSubkey-Type: 1\nSubkey-Length: 2048\nName-Real: Someone\nName-Email: foo@example.com\nPassphrase: 12345678\n%commit\n%echo done' | gpg2 --batch --gen-key"
  - KEYID=$(gpg2 -K --with-colons |grep -P '^sec'|grep -oP '\w{16}')
  - echo -e 'addkey\n6\n2048\n0\nsave' | gpg2 --yes --command-fd 0 --pinentry-mode loopback --passphrase-file=/tmp/passwd --batch --edit-key $KEYID # [2] encrypt key
  - echo -e 'addkey\n4\n2048\n0\nsave' | gpg2 --yes --command-fd 0 --pinentry-mode loopback --passphrase-file=/tmp/passwd --batch --edit-key $KEYID # [3] sign key
  - echo -e 'key 1\nkeytocard\n1\nsave' | gpg2 --yes --command-fd 0 --pinentry-mode loopback --passphrase-file=/tmp/passwd --batch --edit-key $KEYID # key[1] to Signature key
  - echo -e 'key 2\nkeytocard\n2\nsave' | gpg2 --yes --command-fd 0 --pinentry-mode loopback --passphrase-file=/tmp/passwd --batch --edit-key $KEYID # key[2] to Encryption key
  - echo -e 'key 3\nkeytocard\n3\nsave' | gpg2 --yes --command-fd 0 --pinentry-mode loopback --passphrase-file=/tmp/passwd --batch --edit-key $KEYID # key[3] to Authentication key
  - echo -e 'admin\nname\nfirstname\nlastname\nurl\nexample.com\nlogin\nmyuserid\nsex\nm\nlist\nquit' | gpg2 --yes --command-fd 0 --pinentry-mode loopback --passphrase-file=/tmp/passwd --batch --edit-card
  - # PIV tests:
  - pkcs15-tool -D
  - yubico-piv-tool -r 'Virtual Card 00 00' -a verify-pin -P 123456
  - yubico-piv-tool -r 'Virtual Card 00 00' -a change-pin -P 123456 -N 654321
  - yubico-piv-tool -r 'Virtual Card 00 00' -a verify-pin -P 654321
  - yubico-piv-tool -r 'Virtual Card 00 00' -a verify-pin -P 123456 | grep '2 tries left before pin is blocked.'
  - yubico-piv-tool -r 'Virtual Card 00 00' -a verify-pin -P 123456 | grep '1 tries left before pin is blocked.'
  - yubico-piv-tool -r 'Virtual Card 00 00' -a verify-pin -P 654321
  - yubico-piv-tool -r 'Virtual Card 00 00' -P 654321 -a generate -s 9e >/tmp/pubkey-9e.pem
  - #yubico-piv-tool -r 'Virtual Card 00 00' -P 654321 -a import-certificate -s 9e < /tmp/cert-9e.pem
  - #yubico-piv-tool -r 'Virtual Card 00 00' -P 654321 -a selfsign-certificate -s 9e -S '/CN=test' < /tmp/pubkey-9e.pem >/tmp/cert-9e.pem
  - yubico-piv-tool -r 'Virtual Card 00 00' -a verify-pin -P 222222
  - yubico-piv-tool -r 'Virtual Card 00 00' -a verify-pin -P 222222
  - yubico-piv-tool -r 'Virtual Card 00 00' -a verify-pin -P 222222
  - yubico-piv-tool -r 'Virtual Card 00 00' -a verify-pin -P 654321
  -
  - sudo killall pcscd || true
after_failure:
  - cat /tmp/pcscd.log
