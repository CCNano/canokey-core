name: tests
on: [push, pull_request]
jobs:
  build_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - name: Package Install
      run: |
        sudo apt update
        sudo apt install gcc g++ cmake swig psmisc procps pcscd pcsc-tools yubico-piv-tool libassuan-dev libgcrypt20-dev libksba-dev libnpth0-dev opensc openssl openssh-server libpcsclite-dev libcmocka-dev python3-pip python3-setuptools python3-wheel
        sudo pip install cpp-coveralls

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Cache GO Modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-global

    - name: Check out code
      uses: actions/checkout@v2
      with:
        submodules: recursive
    
    - name: Build FIDO Tests
      run: |
        git clone --depth 1 https://github.com/solokeys/fido2-tests.git
        pushd fido2-tests; pip3 install --user -r requirements.txt; popd

    - name: Build for Test
      run: |
        mkdir build && pushd build
        cmake .. -DENABLE_TESTS=ON -DCMAKE_BUILD_TYPE=Debug
        make -j2
        
    - name: Start the pcscd
      run: |
        sudo killall -9 pcscd || true
        sudo cp build/libu2f-virt-card.so /usr/local/lib/
        sudo cp test-via-pcsc/pcscd-reader.conf /etc/reader.conf.d/
        bash -c "sudo pcscd -a -f >/tmp/pcscd.log &"
        sleep 3
        timeout 1s pcsc_scan || true
        go env -w GO111MODULE=on

    - name: Test the FIDO2
      run: |
        cd fido2-tests
        ~/.local/bin/pytest --color=yes --nfc tests/standard/

    - name: Upload log files
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: logs
        path: /tmp/*.log

    - name: Upload data files
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: data
        path: /tmp/[lc][fe]*
